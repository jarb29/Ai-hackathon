
# MCP Tools Export Report
Generated on: 2025-10-25_15-17-08
Total Tools: 27

================================================================================
CHROME DEVTOOLS MCP SERVER - AVAILABLE TOOLS
================================================================================


1. click
--------

Description: Clicks on the provided element

Input Schema:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot"
    },
    "dblClick": {
      "type": "boolean",
      "description": "Set to true for double clicks. Default is false."
    }
  },
  "required": [
    "uid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


2. close_page
-------------

Description: Closes the page by its index. The last open page cannot be closed.

Input Schema:
{
  "type": "object",
  "properties": {
    "pageIdx": {
      "type": "number",
      "description": "The index of the page to close. Call list_pages to list pages."
    }
  },
  "required": [
    "pageIdx"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


3. drag
-------

Description: Drag an element onto another element

Input Schema:
{
  "type": "object",
  "properties": {
    "from_uid": {
      "type": "string",
      "description": "The uid of the element to drag"
    },
    "to_uid": {
      "type": "string",
      "description": "The uid of the element to drop into"
    }
  },
  "required": [
    "from_uid",
    "to_uid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


4. emulate_cpu
--------------

Description: Emulates CPU throttling by slowing down the selected page's execution.

Input Schema:
{
  "type": "object",
  "properties": {
    "throttlingRate": {
      "type": "number",
      "minimum": 1,
      "maximum": 20,
      "description": "The CPU throttling rate representing the slowdown factor 1-20x. Set the rate to 1 to disable throttling"
    }
  },
  "required": [
    "throttlingRate"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


5. emulate_network
------------------

Description: Emulates network conditions such as throttling or offline mode on the selected page.

Input Schema:
{
  "type": "object",
  "properties": {
    "throttlingOption": {
      "type": "string",
      "enum": [
        "No emulation",
        "Offline",
        "Slow 3G",
        "Fast 3G",
        "Slow 4G",
        "Fast 4G"
      ],
      "description": "The network throttling option to emulate. Available throttling options are: No emulation, Offline, Slow 3G, Fast 3G, Slow 4G, Fast 4G. Set to \"No emulation\" to disable. Set to \"Offline\" to simulate offline network conditions."
    }
  },
  "required": [
    "throttlingOption"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


6. evaluate_script
------------------

Description: Evaluate a JavaScript function inside the currently selected page. Returns the response as JSON
so returned values have to JSON-serializable.

Input Schema:
{
  "type": "object",
  "properties": {
    "function": {
      "type": "string",
      "description": "A JavaScript function declaration to be executed by the tool in the currently selected page.\nExample without arguments: `() => {\n  return document.title\n}` or `async () => {\n  return await fetch(\"example.com\")\n}`.\nExample with arguments: `(el) => {\n  return el.innerText;\n}`\n"
    },
    "args": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The uid of an element on the page from the page content snapshot"
          }
        },
        "required": [
          "uid"
        ],
        "additionalProperties": false
      },
      "description": "An optional list of arguments to pass to the function."
    }
  },
  "required": [
    "function"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


7. fill
-------

Description: Type text into a input, text area or select an option from a <select> element.

Input Schema:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot"
    },
    "value": {
      "type": "string",
      "description": "The value to fill in"
    }
  },
  "required": [
    "uid",
    "value"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


8. fill_form
------------

Description: Fill out multiple form elements at once

Input Schema:
{
  "type": "object",
  "properties": {
    "elements": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The uid of the element to fill out"
          },
          "value": {
            "type": "string",
            "description": "Value for the element"
          }
        },
        "required": [
          "uid",
          "value"
        ],
        "additionalProperties": false
      },
      "description": "Elements from snapshot to fill out."
    }
  },
  "required": [
    "elements"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


9. get_console_message
----------------------

Description: Gets a console message by its ID. You can get all messages by calling list_console_messages.

Input Schema:
{
  "type": "object",
  "properties": {
    "msgid": {
      "type": "number",
      "description": "The msgid of a console message on the page from the listed console messages"
    }
  },
  "required": [
    "msgid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


10. get_network_request
-----------------------

Description: Gets a network request by URL. You can get all requests by calling list_network_requests.

Input Schema:
{
  "type": "object",
  "properties": {
    "reqid": {
      "type": "number",
      "description": "The reqid of a request on the page from the listed network requests"
    }
  },
  "required": [
    "reqid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


11. handle_dialog
-----------------

Description: If a browser dialog was opened, use this command to handle it

Input Schema:
{
  "type": "object",
  "properties": {
    "action": {
      "type": "string",
      "enum": [
        "accept",
        "dismiss"
      ],
      "description": "Whether to dismiss or accept the dialog"
    },
    "promptText": {
      "type": "string",
      "description": "Optional prompt text to enter into the dialog."
    }
  },
  "required": [
    "action"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


12. hover
---------

Description: Hover over the provided element

Input Schema:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot"
    }
  },
  "required": [
    "uid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


13. list_console_messages
-------------------------

Description: List all console messages for the currently selected page since the last navigation.

Input Schema:
{
  "type": "object",
  "properties": {
    "pageSize": {
      "type": "integer",
      "exclusiveMinimum": 0,
      "description": "Maximum number of messages to return. When omitted, returns all requests."
    },
    "pageIdx": {
      "type": "integer",
      "minimum": 0,
      "description": "Page number to return (0-based). When omitted, returns the first page."
    },
    "types": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "log",
          "debug",
          "info",
          "error",
          "warn",
          "dir",
          "dirxml",
          "table",
          "trace",
          "clear",
          "startGroup",
          "startGroupCollapsed",
          "endGroup",
          "assert",
          "profile",
          "profileEnd",
          "count",
          "timeEnd",
          "verbose"
        ]
      },
      "description": "Filter messages to only return messages of the specified resource types. When omitted or empty, returns all messages."
    },
    "includePreservedMessages": {
      "type": "boolean",
      "default": false,
      "description": "Set to true to return the preserved messages over the last 3 navigations."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


14. list_network_requests
-------------------------

Description: List all requests for the currently selected page since the last navigation.

Input Schema:
{
  "type": "object",
  "properties": {
    "pageSize": {
      "type": "integer",
      "exclusiveMinimum": 0,
      "description": "Maximum number of requests to return. When omitted, returns all requests."
    },
    "pageIdx": {
      "type": "integer",
      "minimum": 0,
      "description": "Page number to return (0-based). When omitted, returns the first page."
    },
    "resourceTypes": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "document",
          "stylesheet",
          "image",
          "media",
          "font",
          "script",
          "texttrack",
          "xhr",
          "fetch",
          "prefetch",
          "eventsource",
          "websocket",
          "manifest",
          "signedexchange",
          "ping",
          "cspviolationreport",
          "preflight",
          "fedcm",
          "other"
        ]
      },
      "description": "Filter requests to only return requests of the specified resource types. When omitted or empty, returns all requests."
    },
    "includePreservedRequests": {
      "type": "boolean",
      "default": false,
      "description": "Set to true to return the preserved requests over the last 3 navigations."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


15. list_pages
--------------

Description: Get a list of pages open in the browser.

Input Schema:
{
  "type": "object",
  "properties": {},
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


16. navigate_page
-----------------

Description: Navigates the currently selected page to a URL.

Input Schema:
{
  "type": "object",
  "properties": {
    "url": {
      "type": "string",
      "description": "URL to navigate the page to"
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "url"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


17. navigate_page_history
-------------------------

Description: Navigates the currently selected page.

Input Schema:
{
  "type": "object",
  "properties": {
    "navigate": {
      "type": "string",
      "enum": [
        "back",
        "forward"
      ],
      "description": "Whether to navigate back or navigate forward in the selected pages history"
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "navigate"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


18. new_page
------------

Description: Creates a new page

Input Schema:
{
  "type": "object",
  "properties": {
    "url": {
      "type": "string",
      "description": "URL to load in a new page."
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "url"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


19. performance_analyze_insight
-------------------------------

Description: Provides more detailed information on a specific Performance Insight that was highlighted in the results of a trace recording.

Input Schema:
{
  "type": "object",
  "properties": {
    "insightName": {
      "type": "string",
      "description": "The name of the Insight you want more information on. For example: \"DocumentLatency\" or \"LCPBreakdown\""
    }
  },
  "required": [
    "insightName"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


20. performance_start_trace
---------------------------

Description: Starts a performance trace recording on the selected page. This can be used to look for performance problems and insights to improve the performance of the page. It will also report Core Web Vital (CWV) scores for the page.

Input Schema:
{
  "type": "object",
  "properties": {
    "reload": {
      "type": "boolean",
      "description": "Determines if, once tracing has started, the page should be automatically reloaded."
    },
    "autoStop": {
      "type": "boolean",
      "description": "Determines if the trace recording should be automatically stopped."
    }
  },
  "required": [
    "reload",
    "autoStop"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


21. performance_stop_trace
--------------------------

Description: Stops the active performance trace recording on the selected page.

Input Schema:
{
  "type": "object",
  "properties": {},
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


22. resize_page
---------------

Description: Resizes the selected page's window so that the page has specified dimension

Input Schema:
{
  "type": "object",
  "properties": {
    "width": {
      "type": "number",
      "description": "Page width"
    },
    "height": {
      "type": "number",
      "description": "Page height"
    }
  },
  "required": [
    "width",
    "height"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


23. select_page
---------------

Description: Select a page as a context for future tool calls.

Input Schema:
{
  "type": "object",
  "properties": {
    "pageIdx": {
      "type": "number",
      "description": "The index of the page to select. Call list_pages to list pages."
    }
  },
  "required": [
    "pageIdx"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


24. take_screenshot
-------------------

Description: Take a screenshot of the page or element.

Input Schema:
{
  "type": "object",
  "properties": {
    "format": {
      "type": "string",
      "enum": [
        "png",
        "jpeg",
        "webp"
      ],
      "default": "png",
      "description": "Type of format to save the screenshot as. Default is \"png\""
    },
    "quality": {
      "type": "number",
      "minimum": 0,
      "maximum": 100,
      "description": "Compression quality for JPEG and WebP formats (0-100). Higher values mean better quality but larger file sizes. Ignored for PNG format."
    },
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot. If omitted takes a pages screenshot."
    },
    "fullPage": {
      "type": "boolean",
      "description": "If set to true takes a screenshot of the full page instead of the currently visible viewport. Incompatible with uid."
    },
    "filePath": {
      "type": "string",
      "description": "The absolute path, or a path relative to the current working directory, to save the screenshot to instead of attaching it to the response."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


25. take_snapshot
-----------------

Description: Take a text snapshot of the currently selected page based on the a11y tree. The snapshot lists page elements along with a unique
identifier (uid). Always use the latest snapshot. Prefer taking a snapshot over taking a screenshot.

Input Schema:
{
  "type": "object",
  "properties": {
    "verbose": {
      "type": "boolean",
      "description": "Whether to include all possible information available in the full a11y tree. Default is false."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


26. upload_file
---------------

Description: Upload a file through a provided element.

Input Schema:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of the file input element or an element that will open file chooser on the page from the page content snapshot"
    },
    "filePath": {
      "type": "string",
      "description": "The local path of the file to upload"
    }
  },
  "required": [
    "uid",
    "filePath"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


27. wait_for
------------

Description: Wait for the specified text to appear on the selected page.

Input Schema:
{
  "type": "object",
  "properties": {
    "text": {
      "type": "string",
      "description": "Text to appear on the page"
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "text"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


================================================================================
OPENAI FUNCTION FORMAT (FOR LLM INTEGRATION)
================================================================================


1. click
--------

Description: Clicks on the provided element

Parameters:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot"
    },
    "dblClick": {
      "type": "boolean",
      "description": "Set to true for double clicks. Default is false."
    }
  },
  "required": [
    "uid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


2. close_page
-------------

Description: Closes the page by its index. The last open page cannot be closed.

Parameters:
{
  "type": "object",
  "properties": {
    "pageIdx": {
      "type": "number",
      "description": "The index of the page to close. Call list_pages to list pages."
    }
  },
  "required": [
    "pageIdx"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


3. drag
-------

Description: Drag an element onto another element

Parameters:
{
  "type": "object",
  "properties": {
    "from_uid": {
      "type": "string",
      "description": "The uid of the element to drag"
    },
    "to_uid": {
      "type": "string",
      "description": "The uid of the element to drop into"
    }
  },
  "required": [
    "from_uid",
    "to_uid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


4. emulate_cpu
--------------

Description: Emulates CPU throttling by slowing down the selected page's execution.

Parameters:
{
  "type": "object",
  "properties": {
    "throttlingRate": {
      "type": "number",
      "minimum": 1,
      "maximum": 20,
      "description": "The CPU throttling rate representing the slowdown factor 1-20x. Set the rate to 1 to disable throttling"
    }
  },
  "required": [
    "throttlingRate"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


5. emulate_network
------------------

Description: Emulates network conditions such as throttling or offline mode on the selected page.

Parameters:
{
  "type": "object",
  "properties": {
    "throttlingOption": {
      "type": "string",
      "enum": [
        "No emulation",
        "Offline",
        "Slow 3G",
        "Fast 3G",
        "Slow 4G",
        "Fast 4G"
      ],
      "description": "The network throttling option to emulate. Available throttling options are: No emulation, Offline, Slow 3G, Fast 3G, Slow 4G, Fast 4G. Set to \"No emulation\" to disable. Set to \"Offline\" to simulate offline network conditions."
    }
  },
  "required": [
    "throttlingOption"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


6. evaluate_script
------------------

Description: Evaluate a JavaScript function inside the currently selected page. Returns the response as JSON
so returned values have to JSON-serializable.

Parameters:
{
  "type": "object",
  "properties": {
    "function": {
      "type": "string",
      "description": "A JavaScript function declaration to be executed by the tool in the currently selected page.\nExample without arguments: `() => {\n  return document.title\n}` or `async () => {\n  return await fetch(\"example.com\")\n}`.\nExample with arguments: `(el) => {\n  return el.innerText;\n}`\n"
    },
    "args": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The uid of an element on the page from the page content snapshot"
          }
        },
        "required": [
          "uid"
        ],
        "additionalProperties": false
      },
      "description": "An optional list of arguments to pass to the function."
    }
  },
  "required": [
    "function"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


7. fill
-------

Description: Type text into a input, text area or select an option from a <select> element.

Parameters:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot"
    },
    "value": {
      "type": "string",
      "description": "The value to fill in"
    }
  },
  "required": [
    "uid",
    "value"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


8. fill_form
------------

Description: Fill out multiple form elements at once

Parameters:
{
  "type": "object",
  "properties": {
    "elements": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The uid of the element to fill out"
          },
          "value": {
            "type": "string",
            "description": "Value for the element"
          }
        },
        "required": [
          "uid",
          "value"
        ],
        "additionalProperties": false
      },
      "description": "Elements from snapshot to fill out."
    }
  },
  "required": [
    "elements"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


9. get_console_message
----------------------

Description: Gets a console message by its ID. You can get all messages by calling list_console_messages.

Parameters:
{
  "type": "object",
  "properties": {
    "msgid": {
      "type": "number",
      "description": "The msgid of a console message on the page from the listed console messages"
    }
  },
  "required": [
    "msgid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


10. get_network_request
-----------------------

Description: Gets a network request by URL. You can get all requests by calling list_network_requests.

Parameters:
{
  "type": "object",
  "properties": {
    "reqid": {
      "type": "number",
      "description": "The reqid of a request on the page from the listed network requests"
    }
  },
  "required": [
    "reqid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


11. handle_dialog
-----------------

Description: If a browser dialog was opened, use this command to handle it

Parameters:
{
  "type": "object",
  "properties": {
    "action": {
      "type": "string",
      "enum": [
        "accept",
        "dismiss"
      ],
      "description": "Whether to dismiss or accept the dialog"
    },
    "promptText": {
      "type": "string",
      "description": "Optional prompt text to enter into the dialog."
    }
  },
  "required": [
    "action"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


12. hover
---------

Description: Hover over the provided element

Parameters:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot"
    }
  },
  "required": [
    "uid"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


13. list_console_messages
-------------------------

Description: List all console messages for the currently selected page since the last navigation.

Parameters:
{
  "type": "object",
  "properties": {
    "pageSize": {
      "type": "integer",
      "exclusiveMinimum": 0,
      "description": "Maximum number of messages to return. When omitted, returns all requests."
    },
    "pageIdx": {
      "type": "integer",
      "minimum": 0,
      "description": "Page number to return (0-based). When omitted, returns the first page."
    },
    "types": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "log",
          "debug",
          "info",
          "error",
          "warn",
          "dir",
          "dirxml",
          "table",
          "trace",
          "clear",
          "startGroup",
          "startGroupCollapsed",
          "endGroup",
          "assert",
          "profile",
          "profileEnd",
          "count",
          "timeEnd",
          "verbose"
        ]
      },
      "description": "Filter messages to only return messages of the specified resource types. When omitted or empty, returns all messages."
    },
    "includePreservedMessages": {
      "type": "boolean",
      "default": false,
      "description": "Set to true to return the preserved messages over the last 3 navigations."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


14. list_network_requests
-------------------------

Description: List all requests for the currently selected page since the last navigation.

Parameters:
{
  "type": "object",
  "properties": {
    "pageSize": {
      "type": "integer",
      "exclusiveMinimum": 0,
      "description": "Maximum number of requests to return. When omitted, returns all requests."
    },
    "pageIdx": {
      "type": "integer",
      "minimum": 0,
      "description": "Page number to return (0-based). When omitted, returns the first page."
    },
    "resourceTypes": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "document",
          "stylesheet",
          "image",
          "media",
          "font",
          "script",
          "texttrack",
          "xhr",
          "fetch",
          "prefetch",
          "eventsource",
          "websocket",
          "manifest",
          "signedexchange",
          "ping",
          "cspviolationreport",
          "preflight",
          "fedcm",
          "other"
        ]
      },
      "description": "Filter requests to only return requests of the specified resource types. When omitted or empty, returns all requests."
    },
    "includePreservedRequests": {
      "type": "boolean",
      "default": false,
      "description": "Set to true to return the preserved requests over the last 3 navigations."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


15. list_pages
--------------

Description: Get a list of pages open in the browser.

Parameters:
{
  "type": "object",
  "properties": {},
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


16. navigate_page
-----------------

Description: Navigates the currently selected page to a URL.

Parameters:
{
  "type": "object",
  "properties": {
    "url": {
      "type": "string",
      "description": "URL to navigate the page to"
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "url"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


17. navigate_page_history
-------------------------

Description: Navigates the currently selected page.

Parameters:
{
  "type": "object",
  "properties": {
    "navigate": {
      "type": "string",
      "enum": [
        "back",
        "forward"
      ],
      "description": "Whether to navigate back or navigate forward in the selected pages history"
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "navigate"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


18. new_page
------------

Description: Creates a new page

Parameters:
{
  "type": "object",
  "properties": {
    "url": {
      "type": "string",
      "description": "URL to load in a new page."
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "url"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


19. performance_analyze_insight
-------------------------------

Description: Provides more detailed information on a specific Performance Insight that was highlighted in the results of a trace recording.

Parameters:
{
  "type": "object",
  "properties": {
    "insightName": {
      "type": "string",
      "description": "The name of the Insight you want more information on. For example: \"DocumentLatency\" or \"LCPBreakdown\""
    }
  },
  "required": [
    "insightName"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


20. performance_start_trace
---------------------------

Description: Starts a performance trace recording on the selected page. This can be used to look for performance problems and insights to improve the performance of the page. It will also report Core Web Vital (CWV) scores for the page.

Parameters:
{
  "type": "object",
  "properties": {
    "reload": {
      "type": "boolean",
      "description": "Determines if, once tracing has started, the page should be automatically reloaded."
    },
    "autoStop": {
      "type": "boolean",
      "description": "Determines if the trace recording should be automatically stopped."
    }
  },
  "required": [
    "reload",
    "autoStop"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


21. performance_stop_trace
--------------------------

Description: Stops the active performance trace recording on the selected page.

Parameters:
{
  "type": "object",
  "properties": {},
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


22. resize_page
---------------

Description: Resizes the selected page's window so that the page has specified dimension

Parameters:
{
  "type": "object",
  "properties": {
    "width": {
      "type": "number",
      "description": "Page width"
    },
    "height": {
      "type": "number",
      "description": "Page height"
    }
  },
  "required": [
    "width",
    "height"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


23. select_page
---------------

Description: Select a page as a context for future tool calls.

Parameters:
{
  "type": "object",
  "properties": {
    "pageIdx": {
      "type": "number",
      "description": "The index of the page to select. Call list_pages to list pages."
    }
  },
  "required": [
    "pageIdx"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


24. take_screenshot
-------------------

Description: Take a screenshot of the page or element.

Parameters:
{
  "type": "object",
  "properties": {
    "format": {
      "type": "string",
      "enum": [
        "png",
        "jpeg",
        "webp"
      ],
      "default": "png",
      "description": "Type of format to save the screenshot as. Default is \"png\""
    },
    "quality": {
      "type": "number",
      "minimum": 0,
      "maximum": 100,
      "description": "Compression quality for JPEG and WebP formats (0-100). Higher values mean better quality but larger file sizes. Ignored for PNG format."
    },
    "uid": {
      "type": "string",
      "description": "The uid of an element on the page from the page content snapshot. If omitted takes a pages screenshot."
    },
    "fullPage": {
      "type": "boolean",
      "description": "If set to true takes a screenshot of the full page instead of the currently visible viewport. Incompatible with uid."
    },
    "filePath": {
      "type": "string",
      "description": "The absolute path, or a path relative to the current working directory, to save the screenshot to instead of attaching it to the response."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


25. take_snapshot
-----------------

Description: Take a text snapshot of the currently selected page based on the a11y tree. The snapshot lists page elements along with a unique
identifier (uid). Always use the latest snapshot. Prefer taking a snapshot over taking a screenshot.

Parameters:
{
  "type": "object",
  "properties": {
    "verbose": {
      "type": "boolean",
      "description": "Whether to include all possible information available in the full a11y tree. Default is false."
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


26. upload_file
---------------

Description: Upload a file through a provided element.

Parameters:
{
  "type": "object",
  "properties": {
    "uid": {
      "type": "string",
      "description": "The uid of the file input element or an element that will open file chooser on the page from the page content snapshot"
    },
    "filePath": {
      "type": "string",
      "description": "The local path of the file to upload"
    }
  },
  "required": [
    "uid",
    "filePath"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


27. wait_for
------------

Description: Wait for the specified text to appear on the selected page.

Parameters:
{
  "type": "object",
  "properties": {
    "text": {
      "type": "string",
      "description": "Text to appear on the page"
    },
    "timeout": {
      "type": "integer",
      "description": "Maximum wait time in milliseconds. If set to 0, the default timeout will be used."
    }
  },
  "required": [
    "text"
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/draft-07/schema#"
}


================================================================================
EXPORT SUMMARY
================================================================================

Export Date: 2025-10-25_15-17-08
MCP Server: chrome-devtools-mcp@latest
Protocol Version: 2024-11-05
Client: web-audit-agent v1.0.0

Tool Categories Detected:
- Navigation
- Other
- Performance
- Screenshot/Capture

Total Available Tools: 27
Successfully Transformed: 27

This export can be used for:
- Understanding available MCP capabilities
- LLM function calling integration
- Tool documentation and reference
- Debugging MCP connections

================================================================================
